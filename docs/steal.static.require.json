c({"name": "steal.static.require", "params": {"options": {"description": "<p>the steal options for this file, including path information</p>", "type": "Object", "optional": false, "order": 0, "name": "options"}, "success": {"description": "<p>a method to call when the file is converted and processed successfully</p>", "type": "Function", "optional": false, "order": 1, "name": "success"}, "error": {"description": "<p>a method called if the conversion fails or the file doesn't exist</p>", "type": "Function", "optional": false, "order": 2, "name": "error"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["steal.static"], "comment": "<p>Called for every file that is loaded.  It sets up a string of methods called for each type in the conversion chain and calls each type one by one.  </p>\n\n<p>For example, if the file is a coffeescript file, here's what happens:</p>\n\n<ul>\n<li>The \"text\" type converter is called first.  This will perform an AJAX request for the file and save it in options.text.  </li>\n<li>Then the coffee type converter is called (the user provided method).  This converts the text from coffeescript to JavaScript.  </li>\n<li>Finally the \"js\" type converter is called, which inserts the JavaScript in the page as a script tag that is executed. </li>\n</ul>", "src": "steal/steal.js", "line": 1245, "children": []})